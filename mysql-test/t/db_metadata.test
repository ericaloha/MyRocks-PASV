# Test per-database database-metadata attribute
--source include/have_innodb.inc
connection default;

--disable_warnings
drop database if exists test2;
drop database if exists test3;
drop database if exists test4;
drop database if exists test5;
drop database if exists test6;
drop database if exists test7;
drop database if exists test8;
drop database if exists test9;
drop database if exists test10;
drop database if exists test11;
drop database if exists test12;
drop database if exists test13;
drop database if exists test14;
--enable_warnings

--disable_query_log
let $MYSQLD_DATADIR= `select @@datadir`;
--enable_query_log

--error 1
file_exists $MYSQLD_DATADIR/mysql/db.opt;
--error 1
file_exists $MYSQLD_DATADIR/test/db.opt;

# create database without any options
create database test2;
show create database test2;
--exec cat $MYSQLD_DATADIR/test2/db.opt

# create database with character set
create database test3 character set utf8;
show create database test3;
--exec cat $MYSQLD_DATADIR/test3/db.opt

# create database with read only
create database test4 read_only = true;
show create database test4;
--exec cat $MYSQLD_DATADIR/test4/db.opt

# create database with db metadata
create database test5 db_metadata = "{\"shard\":\"test5_shard\"}";
show create database test5;
--exec cat $MYSQLD_DATADIR/test5/db.opt
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# verify show create is valid
--let $db_create=query_get_value(show create database test5, 'Create Database', 1)
drop database test5;
eval $db_create;
show create database test5;
--exec cat $MYSQLD_DATADIR/test5/db.opt
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# create database with character set and db metadata
create database test6 character set utf8 db_metadata = "{\"shard\":\"test6_shard\"}";
show create database test6;
--exec cat $MYSQLD_DATADIR/test6/db.opt
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# create database with read only and db metadata
create database test7 read_only = true db_metadata = "{\"shard\":\"test7_shard\"}";
show create database test7;
--exec cat $MYSQLD_DATADIR/test7/db.opt
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# create database with character set and read only
create database test8 character set utf8 read_only = true;
show create database test8;
--exec cat $MYSQLD_DATADIR/test8/db.opt
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# create database with character set, read only and db metadata
create database test9 character set utf8 read_only = true db_metadata = "{\"shard\":\"test9_shard\"}";
show create database test9;
--exec cat $MYSQLD_DATADIR/test9/db.opt
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# create database with invalid JSON string for db_metadata
--error ER_DB_METADATA_INVALID_JSON
create database test10 db_metadata = "invalid_json";
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# create database with single quotation
--error ER_DB_METADATA_INVALID_JSON
create database test11 db_metadata = "{\'shard\':\'test11_shard\'}";
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# create database with double quote around metadata with single and double quotes in value
create database test12 db_metadata = "{\"sha'rd\":\"test12\\\"_shard\"}";
show create database test12;
--exec cat $MYSQLD_DATADIR/test12/db.opt
--let $db_create=query_get_value(show create database test12, 'Create Database', 1)
drop database test12;
eval $db_create;
show create database test12;

# create database with single quote around metadata with single and double quotes in value
create database test13 db_metadata = '{"sha\'\\"rd":"test13\'_sh\\"ard"}';
show create database test13;
--exec cat $MYSQLD_DATADIR/test13/db.opt
--let $db_create=query_get_value(show create database test13, 'Create Database', 1)
drop database test13;
eval $db_create;
show create database test13;

# create database with JSON array 
--error ER_DB_METADATA_INVALID_JSON
create database test14 db_metadata = "[{\"shard\":\"test14_shard\", \"data\":\"1234\"}]";
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# alter database tests

# alter database character set
alter database test3 character set ascii;
show create database test3;
--exec cat $MYSQLD_DATADIR/test3/db.opt

# alter database db_metadata after charset
alter database test3 db_metadata = "{\"shard\":\"test3_shard_altered\"}";
show create database test3;
--exec cat $MYSQLD_DATADIR/test3/db.opt
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# alter database read only
alter database test4 read_only = true;
show create database test4;
--exec cat $MYSQLD_DATADIR/test4/db.opt

# alter database db_metadata after read only
alter database test4 db_metadata = "{\"shard\":\"test4_shard_altered\"}";
show create database test4;
--exec cat $MYSQLD_DATADIR/test4/db.opt
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# alter database read only
alter database test4 read_only = false;
show create database test4;
--exec cat $MYSQLD_DATADIR/test4/db.opt

# alter database db metadata
alter database test5 db_metadata = "{\"shard\":\"test5_shard_altered\"}";
show create database test5;
--exec cat $MYSQLD_DATADIR/test5/db.opt
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# alter database character set but keep db metadata intact
alter database test5 character set ascii;
show create database test5;
--exec cat $MYSQLD_DATADIR/test5/db.opt

# alter database read only but keep db metadata intact
alter database test5 read_only = true;
show create database test5;
--exec cat $MYSQLD_DATADIR/test5/db.opt

# alter database character set and read only but keep db metadata intact
alter database test5 character set utf8 read_only = false;
show create database test5;
--exec cat $MYSQLD_DATADIR/test5/db.opt

# alter database reset db metadata
alter database test5 db_metadata "";
show create database test5;
--exec cat $MYSQLD_DATADIR/test5/db.opt
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# alter database set db metadata to max length string
alter database test5 db_metadata "{\"shard\":\"Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Fin\"}";
show create database test5;
--exec cat $MYSQLD_DATADIR/test5/db.opt
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# verify show create is valid
--let $db_create=query_get_value(show create database test5, 'Create Database', 1)
drop database test5;
eval $db_create;
show create database test5;
--exec cat $MYSQLD_DATADIR/test5/db.opt

# alter database exceed db metadata max length
--error ER_DB_METADATA_TOO_LONG
alter database test5 db_metadata "{\"shard\":\"Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Really long shard name. Fin\"}";
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# alter database character set and db metadata
alter database test6 character set ascii db_metadata = "{\"shard\":\"test6_shard_altered\"}";
show create database test6;
--exec cat $MYSQLD_DATADIR/test6/db.opt
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# alter database read only and db metadata
alter database test7 read_only = true db_metadata = "{\"shard\":\"test7_shard_altered\"}";
show create database test7;
--exec cat $MYSQLD_DATADIR/test7/db.opt
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# alter database character set and read only
alter database test8 character set ascii read_only = true;
show create database test8;
--exec cat $MYSQLD_DATADIR/test8/db.opt
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# alter database character set, read only and db metadata
alter database test9 character set ascii read_only = true db_metadata = "{\"shard\":\"test9_shard_altered\"}";
show create database test9;
--exec cat $MYSQLD_DATADIR/test9/db.opt
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# ensure information_schema and mysql tables are intact
show create database information_schema;
show create database mysql;
--error ER_DBACCESS_DENIED_ERROR
alter database information_schema db_metadata "{\"shard\":\"is_shard\"}";
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# alter database with invalid JSON string for db_metadata
--error ER_DB_METADATA_INVALID_JSON
alter database test9 db_metadata = "invalid_json";
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# create database without any options
create database test10;
show create database test10;
--exec cat $MYSQLD_DATADIR/test10/db.opt

# alter database read only
alter database test10 read_only = true;
show create database test10;
--exec cat $MYSQLD_DATADIR/test10/db.opt

# alter database db metadata
alter database test10 db_metadata = "{\"shard\":\"test10_shard_altered\"}";
show create database test10;
--exec cat $MYSQLD_DATADIR/test10/db.opt
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# alter database read only
alter database test10 read_only = false;
show create database test10;
--exec cat $MYSQLD_DATADIR/test10/db.opt

# alter database with JSON array 
--error ER_DB_METADATA_INVALID_JSON
alter database test10 db_metadata = "[{\"shard\":\"test10_shard\", \"data\":\"1234\"}]";
select catalog_name, schema_name, db_metadata from information_schema.schemata_ext;

# cleanup
--disable_warnings
drop database if exists test2;
drop database if exists test3;
drop database if exists test4;
drop database if exists test5;
drop database if exists test6;
drop database if exists test7;
drop database if exists test8;
drop database if exists test9;
drop database if exists test10;
drop database if exists test11;
drop database if exists test12;
drop database if exists test13;
drop database if exists test14;
--enable_warnings
