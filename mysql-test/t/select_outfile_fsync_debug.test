disable_query_log;
-- source include/test_outfile.inc
# Server are started in "var/master-data", so "../../tmp" will be "var/tmp"
eval set @tmpdir="../../tmp";
enable_query_log;
-- source include/have_outfile.inc
-- source include/have_debug.inc

# Save the initial number of concurrent sessions
--source include/count_sessions.inc

# Check for fsync's 
--disable_warnings
drop table if exists t2;
--enable_warnings

SET SESSION select_into_file_fsync_size=262144;
SET GLOBAL debug = '+d,print_select_file_fsync_stats';

let SEARCH_FILE = $MYSQLTEST_VARDIR/log/mysqld.1.err;

# Create a table and populate it with some data
CREATE TABLE t2 (a TEXT, b TEXT) ENGINE=INNODB;

# Here we end up with 32768 rows in the table
--disable_query_log
INSERT INTO t2 (a, b) VALUES (REPEAT('a', 512), REPEAT('b', 512));
INSERT INTO t2 (a, b) VALUES (REPEAT('A', 512), REPEAT('B', 512));
let $i=14;
while ($i) {
  INSERT INTO t2 (a, b) SELECT a, b FROM t2;
  dec $i;
}
--enable_query_log

SELECT *
INTO OUTFILE "../../tmp/t2.txt"
FROM t2;

--perl
use strict;

my $err_file = "$ENV{'SEARCH_FILE'}";
open LOG_FILE, $err_file or die "Failed to open $err_file for read";
        
while (<LOG_FILE>) {
  # Looking for the debug log of query attributes
  if (/\[select_to_file\]\[.*\].*/) {
    print;
  }
}       
        
close LOG_FILE;
EOF

DROP TABLE t2;

SET GLOBAL debug = '-d,print_select_file_fsync_stats';

# Wait till we reached the initial number of concurrent sessions
--source include/wait_until_count_sessions.inc
