set @save_filesort_max_file_size = @@global.filesort_max_file_size;

create table t1 (i int, c char(255));

insert into t1 values (0, lpad('a', 250, 'b'));
insert into t1 select i+1,c from t1;
insert into t1 select i+2,c from t1;
insert into t1 select i+4,c from t1;
insert into t1 select i+8,c from t1;
insert into t1 select i+16,c from t1;
insert into t1 select i+32,c from t1;
insert into t1 select i+64,c from t1;
insert into t1 select i+128,c from t1;
insert into t1 select i+256,c from t1;
insert into t1 select i+512,c from t1;
insert into t1 select i+1024,c from t1;
insert into t1 select i+2048,c from t1;

echo Query is OK when there is no limit;
show variables like "filesort_max_file_size";
show session variables like "filesort_max_file_size";
show global variables like "filesort_max_file_size";
explain select i, c from t1 order by hex(c) limit 1 offset 4000;
select i, c from t1 order by hex(c) limit 1 offset 4000;

--let $filesort_disk_usage = query_get_value(SHOW SESSION STATUS LIKE 'filesort_disk_usage', Value, 1)
--let $filesort_disk_usage_peak = query_get_value(SHOW SESSION STATUS LIKE 'filesort_disk_usage_peak', Value, 1)
--disable_query_log
--eval select $filesort_disk_usage = 0 as "filesort usage is 0"
--eval select $filesort_disk_usage_peak > 2000000 as "filesort peak is above 2000000"
--enable_query_log

flush status;

--let $filesort_disk_usage_peak = query_get_value(SHOW SESSION STATUS LIKE 'filesort_disk_usage_peak', Value, 1)
--disable_query_log
--eval select $filesort_disk_usage_peak = 0 as "filesort peak is reset to 0"
--enable_query_log

echo Query fails with a limit;
set session filesort_max_file_size=1000000;
show variables like "filesort_max_file_size";
show session variables like "filesort_max_file_size";
show global variables like "filesort_max_file_size";
--error ER_FILESORT_MAX_FILE_SIZE_EXCEEDED
select i, c from t1 order by hex(c) limit 1 offset 4000;

--let $filesort_disk_usage_peak = query_get_value(SHOW SESSION STATUS LIKE 'filesort_disk_usage_peak', Value, 1)
--disable_query_log
--eval select 1000000 < $filesort_disk_usage_peak and $filesort_disk_usage_peak < 1100000 as "filesort peak is slightly above 1000000"
--enable_query_log

echo Query is OK when another session has a limit;
connect (root,localhost,root,,test,$MASTER_MYPORT,$MASTER_MYSOCK);
show variables like "filesort_max_file_size";
show session variables like "filesort_max_file_size";
show global variables like "filesort_max_file_size";
select i, c from t1 order by hex(c) limit 1 offset 4000;
connection default;
disconnect root;

echo Query is OK when session limit is reset;
set session filesort_max_file_size=0;
show variables like "filesort_max_file_size";
show session variables like "filesort_max_file_size";
show global variables like "filesort_max_file_size";
select i, c from t1 order by hex(c) limit 1 offset 4000;

echo Query fails when global limit is set;
set global filesort_max_file_size=1000000;
connect (root,localhost,root,,test,$MASTER_MYPORT,$MASTER_MYSOCK);
show variables like "filesort_max_file_size";
show session variables like "filesort_max_file_size";
show global variables like "filesort_max_file_size";
--error ER_FILESORT_MAX_FILE_SIZE_EXCEEDED
select i, c from t1 order by hex(c) limit 1 offset 4000;

connection default;
disconnect root;

drop table t1;

set @@global.filesort_max_file_size = @save_filesort_max_file_size;
