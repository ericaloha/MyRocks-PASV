--source include/no_perfschema.inc

--source include/count_sessions.inc

create user user_super@localhost identified by 'su';
grant all on *.* to user_super@localhost with grant option;

connect (con13, localhost, user_super,su,test);

####################################################
### Case 1: sql_stats_control=OFF_HARD, no data will be stored in sql_text.
####################################################
--echo Case 1: sql_stats_control=OFF_HARD
select @@sql_stats_control;
select 42;
select * from information_schema.sql_text;

####################################################
### Case 2: sql_stats_control=ON, simple queries. Data will be stored in sql_text.
####################################################
--echo Case 2: sql_stats_control=ON, small simple queries
set @@GLOBAL.sql_stats_control="ON";
select @@sql_stats_control;
select 1;
select 2;
select 100;

select * from information_schema.sql_text
order by sql_id;

create table t1(c int, cname varchar(20));
insert into t1 values(1, "one");
insert into t1 values(2, "two");
insert into t1 values(3, "three");
insert into t1 values(4, "four");
insert into t1 values(5, "five");
update t1 set c=c+100;
update t1 set c=c+300;
update t1 set c=c+500;
delete from t1 where c=905;
delete from t1 where c=903;

select * from information_schema.sql_text
order by sql_id;

####################################################
### Case 3: sql_stats_control=ON, big queries.
####################################################
--echo Case 3a: sql_stats_control=ON, big queries, around 800 chars
# A query < 1k characters: ~734 characters
select cname from t1 where c=901
union
select cname from t1 where c=2
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3;

--echo Case 3b: sql_stats_control=ON, big queries, around 5000 chars
# A big query: > 4k characters: ~4730 characters
select cname from t1 where c=902
union
select cname from t1 where c=2
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3
union
select cname from t1 where c=3;

select * from information_schema.sql_text
order by sql_id;

####################################################
### Case 4: sql_stats_control=OFF_SOFT. Disable collection, but keep the data around.
####################################################
--echo Case 4: sql_stats_control=OFF_SOFT. Disable collection, but keep the data around.
set @@GLOBAL.sql_stats_control="OFF_SOFT";
select @@sql_stats_control;
select 1 union select 2;
select 1 union select 2 union select 3;
select * from information_schema.sql_text
order by sql_id;

####################################################
### Case 5: sql_stats_control=OFF_HARD. Disable, and check if all data is deleted.
####################################################
--echo Case 5: sql_stats_control=OFF_HARD. Disable, and check if all data is deleted.
set @@GLOBAL.sql_stats_control="OFF_HARD";
select @@sql_stats_control;
select * from information_schema.sql_text;

####################################################
### Case 6: sql_stats_control=ON. Re-enable to make sure that data is making its way to sql_text.
####################################################
--echo Case 6: sql_stats_control=ON. Re-enable to make sure that data is making its way to sql_text.
set @@GLOBAL.sql_stats_control="ON";
select @@sql_stats_control;
select 101;
select * from information_schema.sql_text
order by sql_id;

####################################################
### Case 7: Multi-query support
####################################################
--echo Case 7: Multi-query support
set @@GLOBAL.sql_stats_control="OFF_HARD";
set @@GLOBAL.sql_stats_control="ON";
select @@sql_stats_control;
delimiter ||||;

select 1;
select 2;
select 3;
create table t2(c int);
insert into t2 values(100);
select * from t2;
update t2 set c=c+7;
delete from t2 where c=107;
drop table t2;
||||

select * from information_schema.sql_text
order by sql_id||||

# reset delimiter
delimiter ;||||

###########
### Cleanup
###########
--echo Cleanup
connection default;
set @@GLOBAL.sql_stats_control="OFF_HARD";
drop table t1;
drop user user_super@localhost;
disconnect con13;

--source include/wait_until_count_sessions.inc
