##
## Using the system variable slave_high_priority_ddl"
##
include/master-slave.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection master]
##
## killing conflicting shared locks by alter table
##

## Test parameters:
## use_sys_var       = 1
## con_init          = master
## con_block         = slave2
## con_kill          = slave
## con_status        = slave1
## cmd               = alter table t1 modify i bigint;
## high_priority_cmd = alter high_priority table t1 modify i bigint;
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection master
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: slave2
lock tables t1 read;;
connection: slave
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
SET @m_slave_high_priority_lock_wait_timeout =
@@global.slave_high_priority_lock_wait_timeout;
set global slave_high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: slave1 (for show processlist);
# both slave2 and slave exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
connection: slave
alter table t1 modify i bigint;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set global slave_high_priority_ddl = 1;
connection : slave1([slave] : show status)
# execute DDL command on master
connection master
alter table t1 modify i bigint;;
# sync slave with master
include/sync_slave_sql_with_master.inc
connection: slave1 (for show processlist on slave)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
include/assert.inc [high priority DDL should issue one kill]
include/assert.inc [high priority DDL should be kill at least one connection]
connection: slave
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` bigint(20) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1
select * from t1;
i
1
2
3
connection: slave (for reset variable)
set global slave_high_priority_ddl = 0;
connection: slave1 (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
connection: slave
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
connection: slave (for restore)
set global slave_high_priority_lock_wait_timeout =
@m_slave_high_priority_lock_wait_timeout;
connection master
##
## killing conflicting shared lock in a transaction
## transaction will rollback
##

## Test parameters:
## use_sys_var       = 1
## con_init          = master
## con_block         = slave2
## con_kill          = slave
## con_status        = slave1
## cmd               = alter table t1 rename t1_new;
## high_priority_cmd = alter high_priority table t1 rename t1_new;
## blocking_sql      = begin; insert into t1 values (4); select i from t1;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection master
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: slave2
begin; insert into t1 values (4); select i from t1;;
i
1
2
3
4
connection: slave
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
SET @m_slave_high_priority_lock_wait_timeout =
@@global.slave_high_priority_lock_wait_timeout;
set global slave_high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: slave1 (for show processlist);
# both slave2 and slave exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
connection: slave
alter table t1 rename t1_new;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set global slave_high_priority_ddl = 1;
connection : slave1([slave] : show status)
# execute DDL command on master
connection master
alter table t1 rename t1_new;;
# sync slave with master
include/sync_slave_sql_with_master.inc
connection: slave1 (for show processlist on slave)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
include/assert.inc [high priority DDL should issue one kill]
include/assert.inc [high priority DDL should be kill at least one connection]
connection: slave
show create table t1_new;
Table	Create Table
t1_new	CREATE TABLE `t1_new` (
  `i` int(11) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1
select * from t1_new;
i
1
2
3
4
connection: slave (for reset variable)
set global slave_high_priority_ddl = 0;
connection: slave1 (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
connection: slave
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
connection: slave (for restore)
set global slave_high_priority_lock_wait_timeout =
@m_slave_high_priority_lock_wait_timeout;
connection master
select * from t1_new;
i
1
2
3
drop table t1_new;
##
## rename table, rename table doesn't support high_priority keyword
##

## Test parameters:
## use_sys_var       = 1
## con_init          = master
## con_block         = slave2
## con_kill          = slave
## con_status        = slave1
## cmd               = rename table t1 to t1_new;
## high_priority_cmd = rename high_priority table t1 to t1_new;
## blocking_sql      = begin; insert into t1 values (5); select i from t1;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection master
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: slave2
begin; insert into t1 values (5); select i from t1;;
i
1
2
3
5
connection: slave
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
SET @m_slave_high_priority_lock_wait_timeout =
@@global.slave_high_priority_lock_wait_timeout;
set global slave_high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: slave1 (for show processlist);
# both slave2 and slave exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
connection: slave
rename table t1 to t1_new;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set global slave_high_priority_ddl = 1;
connection : slave1([slave] : show status)
# execute DDL command on master
connection master
rename table t1 to t1_new;;
# sync slave with master
include/sync_slave_sql_with_master.inc
connection: slave1 (for show processlist on slave)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
include/assert.inc [high priority DDL should issue one kill]
include/assert.inc [high priority DDL should be kill at least one connection]
connection: slave
show create table t1_new;
Table	Create Table
t1_new	CREATE TABLE `t1_new` (
  `i` int(11) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1
select * from t1_new;
i
1
2
3
5
connection: slave (for reset variable)
set global slave_high_priority_ddl = 0;
connection: slave1 (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
connection: slave
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
connection: slave (for restore)
set global slave_high_priority_lock_wait_timeout =
@m_slave_high_priority_lock_wait_timeout;
connection master
select * from t1_new;
i
1
2
3
drop table t1_new;
##
## simulate conflicting DDL which will not be killed
##

## Test parameters:
## use_sys_var       = 1
## con_init          = master
## con_block         = slave2
## con_kill          = slave
## con_status        = slave1
## cmd               = drop table t1;
## high_priority_cmd = drop high_priority table t1;
## blocking_sql      = lock tables t1 write;
## should_kill       = 0
## recreate_table    = 1
## throw_error       = 1

connection master
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: slave2
lock tables t1 write;;
connection: slave
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
SET @m_slave_high_priority_lock_wait_timeout =
@@global.slave_high_priority_lock_wait_timeout;
set global slave_high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: slave1 (for show processlist);
# both slave2 and slave exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
connection: slave
drop table t1;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set global slave_high_priority_ddl = 1;
connection : slave1([slave] : show status)
# execute DDL command on master
connection master
drop table t1;;
# sync slave with master
connection: slave
include/wait_for_slave_sql_error.inc [errno=1205]
connection: slave
connection: slave (for reset variable)
set global slave_high_priority_ddl = 0;
connection: slave1 (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
connection: slave1 (for show locks)
START SLAVE SQL_THREAD;
include/wait_for_slave_sql_to_start.inc
connection: slave
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
connection: slave (for restore)
set global slave_high_priority_lock_wait_timeout =
@m_slave_high_priority_lock_wait_timeout;
connection master
##
## killing conflicting transaction by drop table DDL
##

## Test parameters:
## use_sys_var       = 1
## con_init          = master
## con_block         = slave2
## con_kill          = slave
## con_status        = slave1
## cmd               = drop table t1;
## high_priority_cmd = drop high_priority table t1;
## blocking_sql      = lock tables t1 read; begin; insert into t1 values (4);
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection master
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: slave2
lock tables t1 read; begin; insert into t1 values (4);;
connection: slave
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
SET @m_slave_high_priority_lock_wait_timeout =
@@global.slave_high_priority_lock_wait_timeout;
set global slave_high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: slave1 (for show processlist);
# both slave2 and slave exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
connection: slave
drop table t1;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set global slave_high_priority_ddl = 1;
connection : slave1([slave] : show status)
# execute DDL command on master
connection master
drop table t1;;
# sync slave with master
include/sync_slave_sql_with_master.inc
connection: slave1 (for show processlist on slave)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
include/assert.inc [high priority DDL should issue one kill]
include/assert.inc [high priority DDL should be kill at least one connection]
connection: slave
show create table t1;
ERROR 42S02: Table 'test.t1' doesn't exist
select * from t1;
ERROR 42S02: Table 'test.t1' doesn't exist
connection: slave (for reset variable)
set global slave_high_priority_ddl = 0;
connection: slave1 (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
connection: slave
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
connection: slave (for restore)
set global slave_high_priority_lock_wait_timeout =
@m_slave_high_priority_lock_wait_timeout;
connection master
##
## create index
##

## Test parameters:
## use_sys_var       = 1
## con_init          = master
## con_block         = slave2
## con_kill          = slave
## con_status        = slave1
## cmd               = create index idx1 on t1 (i);
## high_priority_cmd = create high_priority index idx1 on t1 (i);
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection master
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: slave2
lock tables t1 read;;
connection: slave
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
SET @m_slave_high_priority_lock_wait_timeout =
@@global.slave_high_priority_lock_wait_timeout;
set global slave_high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: slave1 (for show processlist);
# both slave2 and slave exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
connection: slave
create index idx1 on t1 (i);;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set global slave_high_priority_ddl = 1;
connection : slave1([slave] : show status)
# execute DDL command on master
connection master
create index idx1 on t1 (i);;
# sync slave with master
include/sync_slave_sql_with_master.inc
connection: slave1 (for show processlist on slave)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
include/assert.inc [high priority DDL should issue one kill]
include/assert.inc [high priority DDL should be kill at least one connection]
connection: slave
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL,
  KEY `idx1` (`i`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1
select * from t1;
i
1
2
3
connection: slave (for reset variable)
set global slave_high_priority_ddl = 0;
connection: slave1 (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
connection: slave
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
connection: slave (for restore)
set global slave_high_priority_lock_wait_timeout =
@m_slave_high_priority_lock_wait_timeout;
connection master
##
## drop index (use the previously created table)
##

## Test parameters:
## use_sys_var       = 1
## con_init          = master
## con_block         = slave2
## con_kill          = slave
## con_status        = slave1
## cmd               = drop index idx1 on t1;
## high_priority_cmd = drop high_priority index idx1 on t1;
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 0
## throw_error       = 1

connection master
connection: slave2
lock tables t1 read;;
connection: slave
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
SET @m_slave_high_priority_lock_wait_timeout =
@@global.slave_high_priority_lock_wait_timeout;
set global slave_high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES	MUL	NULL	
connection: slave1 (for show processlist);
# both slave2 and slave exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
connection: slave
drop index idx1 on t1;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set global slave_high_priority_ddl = 1;
connection : slave1([slave] : show status)
# execute DDL command on master
connection master
drop index idx1 on t1;;
# sync slave with master
include/sync_slave_sql_with_master.inc
connection: slave1 (for show processlist on slave)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
include/assert.inc [high priority DDL should issue one kill]
include/assert.inc [high priority DDL should be kill at least one connection]
connection: slave
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1
select * from t1;
i
1
2
3
connection: slave (for reset variable)
set global slave_high_priority_ddl = 0;
connection: slave1 (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
connection: slave
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
connection: slave (for restore)
set global slave_high_priority_lock_wait_timeout =
@m_slave_high_priority_lock_wait_timeout;
connection master
##
## high_priority truncate table
##

## Test parameters:
## use_sys_var       = 1
## con_init          = master
## con_block         = slave2
## con_kill          = slave
## con_status        = slave1
## cmd               = truncate t1;
## high_priority_cmd = truncate high_priority t1;
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection master
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: slave2
lock tables t1 read;;
connection: slave
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
SET @m_slave_high_priority_lock_wait_timeout =
@@global.slave_high_priority_lock_wait_timeout;
set global slave_high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: slave1 (for show processlist);
# both slave2 and slave exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
connection: slave
truncate t1;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set global slave_high_priority_ddl = 1;
connection : slave1([slave] : show status)
# execute DDL command on master
connection master
truncate t1;;
# sync slave with master
include/sync_slave_sql_with_master.inc
connection: slave1 (for show processlist on slave)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
include/assert.inc [high priority DDL should issue one kill]
include/assert.inc [high priority DDL should be kill at least one connection]
connection: slave
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1
select * from t1;
i
connection: slave (for reset variable)
set global slave_high_priority_ddl = 0;
connection: slave1 (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
connection: slave
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
connection: slave (for restore)
set global slave_high_priority_lock_wait_timeout =
@m_slave_high_priority_lock_wait_timeout;
connection master
##
## high_priority create/drop trigger
##

## Test parameters:
## use_sys_var       = 1
## con_init          = master
## con_block         = slave2
## con_kill          = slave
## con_status        = slave1
## cmd               = create trigger ins_sum before insert on t1 for each row set @sum = @sum + new.i;
## high_priority_cmd = create high_priority trigger ins_sum before insert on t1 for each row set @sum = @sum + new.i;
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection master
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: slave2
lock tables t1 read;;
connection: slave
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
SET @m_slave_high_priority_lock_wait_timeout =
@@global.slave_high_priority_lock_wait_timeout;
set global slave_high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: slave1 (for show processlist);
# both slave2 and slave exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
connection: slave
create trigger ins_sum before insert on t1 for each row set @sum = @sum + new.i;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set global slave_high_priority_ddl = 1;
connection : slave1([slave] : show status)
# execute DDL command on master
connection master
create trigger ins_sum before insert on t1 for each row set @sum = @sum + new.i;;
# sync slave with master
include/sync_slave_sql_with_master.inc
connection: slave1 (for show processlist on slave)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
include/assert.inc [high priority DDL should issue one kill]
include/assert.inc [high priority DDL should be kill at least one connection]
connection: slave
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1
select * from t1;
i
1
2
3
connection: slave (for reset variable)
set global slave_high_priority_ddl = 0;
connection: slave1 (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
connection: slave
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
connection: slave (for restore)
set global slave_high_priority_lock_wait_timeout =
@m_slave_high_priority_lock_wait_timeout;
connection master
##
## drop trigger (use the previously created table)
##

## Test parameters:
## use_sys_var       = 1
## con_init          = master
## con_block         = slave2
## con_kill          = slave
## con_status        = slave1
## cmd               = drop trigger ins_sum;
## high_priority_cmd = drop high_priority trigger ins_sum;
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 0
## throw_error       = 1

connection master
connection: slave2
lock tables t1 read;;
connection: slave
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
SET @m_slave_high_priority_lock_wait_timeout =
@@global.slave_high_priority_lock_wait_timeout;
set global slave_high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: slave1 (for show processlist);
# both slave2 and slave exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
connection: slave
drop trigger ins_sum;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set global slave_high_priority_ddl = 1;
connection : slave1([slave] : show status)
# execute DDL command on master
connection master
drop trigger ins_sum;;
# sync slave with master
include/sync_slave_sql_with_master.inc
connection: slave1 (for show processlist on slave)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
include/assert.inc [high priority DDL should issue one kill]
include/assert.inc [high priority DDL should be kill at least one connection]
connection: slave
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1
select * from t1;
i
1
2
3
connection: slave (for reset variable)
set global slave_high_priority_ddl = 0;
connection: slave1 (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
connection: slave
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
connection: slave (for restore)
set global slave_high_priority_lock_wait_timeout =
@m_slave_high_priority_lock_wait_timeout;
connection master
##
## drop database 
##
create database menagerie;
use menagerie;
create table t1(a int);

## Test parameters:
## use_sys_var       = 1
## con_init          = master
## con_block         = slave2
## con_kill          = slave
## con_status        = slave1
## cmd               = drop database menagerie;
## high_priority_cmd = drop high_priority database menagerie;
## blocking_sql      = begin;use menagerie; select * from t1;
## should_kill       = 1
## recreate_table    = 0
## throw_error       = 1

connection master
connection: slave2
begin;use menagerie; select * from t1;;
a
connection: slave
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
SET @m_slave_high_priority_lock_wait_timeout =
@@global.slave_high_priority_lock_wait_timeout;
set global slave_high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: slave1 (for show processlist);
# both slave2 and slave exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	root	#	menagerie	#	#	#	#	#	#	#	0
connection: slave
drop database menagerie;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: menagerie.t1
set global slave_high_priority_ddl = 1;
connection : slave1([slave] : show status)
# execute DDL command on master
connection master
drop database menagerie;;
# sync slave with master
include/sync_slave_sql_with_master.inc
connection: slave1 (for show processlist on slave)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
include/assert.inc [high priority DDL should issue one kill]
include/assert.inc [high priority DDL should be kill at least one connection]
connection: slave
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1
select * from t1;
i
1
2
3
connection: slave (for reset variable)
set global slave_high_priority_ddl = 0;
connection: slave1 (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
connection: slave
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
connection: slave (for restore)
set global slave_high_priority_lock_wait_timeout =
@m_slave_high_priority_lock_wait_timeout;
connection master
use test;
##
## high_priority optimize table
##
## "optimize table" doesn't throw errors. It catches all errors, and
## returns a result set in a table
##

## Test parameters:
## use_sys_var       = 1
## con_init          = master
## con_block         = slave2
## con_kill          = slave
## con_status        = slave1
## cmd               = optimize table t1;
## high_priority_cmd = optimize high_priority table t1;
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 0

connection master
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: slave2
lock tables t1 read;;
connection: slave
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
SET @m_slave_high_priority_lock_wait_timeout =
@@global.slave_high_priority_lock_wait_timeout;
set global slave_high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: slave1 (for show processlist);
# both slave2 and slave exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
connection: slave
optimize table t1;;
Table	Op	Msg_type	Msg_text
test.t1	optimize	Error	Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
test.t1	optimize	status	Operation failed
set global slave_high_priority_ddl = 1;
connection : slave1([slave] : show status)
# execute DDL command on master
connection master
optimize table t1;;
Table	Op	Msg_type	Msg_text
test.t1	optimize	status	OK
# sync slave with master
include/sync_slave_sql_with_master.inc
connection: slave1 (for show processlist on slave)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
include/assert.inc [high priority DDL should issue one kill]
include/assert.inc [high priority DDL should be kill at least one connection]
connection: slave
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1
select * from t1;
i
1
2
3
connection: slave (for reset variable)
set global slave_high_priority_ddl = 0;
connection: slave1 (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	root	#	test	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
#	system user	#	NULL	#	#	#	#	#	#	#	0
connection: slave
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
connection: slave (for restore)
set global slave_high_priority_lock_wait_timeout =
@m_slave_high_priority_lock_wait_timeout;
connection master
##
## clean up
##
connection master
unlock tables;
drop table if exists t1_new;
drop table if exists t1;
include/rpl_end.inc
