create database test_db;
create user test_user@localhost;
grant all on test_db to test_user@localhost;
grant all on test to test_user@localhost;
use test_db;
set @save_max_running_queries = @@max_running_queries;
set @save_max_waiting_queries = @@max_waiting_queries;
set @save_admission_control_weights = @@admission_control_weights;
set global max_running_queries = 5;
set global max_waiting_queries = 2000;
#
# Test admission_control_queue variable works
#
select GET_LOCK('lock1', -1);
GET_LOCK('lock1', -1)
1
select GET_LOCK('lock1', -1);
select * from information_schema.admission_control_queue;
SCHEMA_NAME	QUEUE_ID	WAITING_QUERIES	RUNNING_QUERIES	ABORTED_QUERIES	TIMEOUT_QUERIES
test_db	0	0	1	0	0
select RELEASE_LOCK('lock1');
RELEASE_LOCK('lock1')
1
select * from information_schema.admission_control_queue;
SCHEMA_NAME	QUEUE_ID	WAITING_QUERIES	RUNNING_QUERIES	ABORTED_QUERIES	TIMEOUT_QUERIES
GET_LOCK('lock1', -1)
1
#
# Test connection attribute overrides
#
select GET_LOCK('lock1', -1);
GET_LOCK('lock1', -1)
1
use test_db;
select GET_LOCK('lock1', -1);
select * from information_schema.admission_control_queue;
SCHEMA_NAME	QUEUE_ID	WAITING_QUERIES	RUNNING_QUERIES	ABORTED_QUERIES	TIMEOUT_QUERIES
test_db	1	0	1	0	0
select RELEASE_LOCK('lock1');
RELEASE_LOCK('lock1')
1
select * from information_schema.admission_control_queue;
SCHEMA_NAME	QUEUE_ID	WAITING_QUERIES	RUNNING_QUERIES	ABORTED_QUERIES	TIMEOUT_QUERIES
GET_LOCK('lock1', -1)
1
#
# Test connection and query attribute overrides
#
select GET_LOCK('lock1', -1);
GET_LOCK('lock1', -1)
1
use test_db;
select GET_LOCK('lock1', -1);
select * from information_schema.admission_control_queue;
SCHEMA_NAME	QUEUE_ID	WAITING_QUERIES	RUNNING_QUERIES	ABORTED_QUERIES	TIMEOUT_QUERIES
test_db	2	0	1	0	0
select RELEASE_LOCK('lock1');
RELEASE_LOCK('lock1')
1
select * from information_schema.admission_control_queue;
SCHEMA_NAME	QUEUE_ID	WAITING_QUERIES	RUNNING_QUERIES	ABORTED_QUERIES	TIMEOUT_QUERIES
GET_LOCK('lock1', -1)
1
#
# Test weights (2,3) on queue 1,2
#
set global admission_control_weights = "1,2,3";
select GET_LOCK('lock1', -1);
GET_LOCK('lock1', -1)
1
select GET_LOCK('lock2', -1);
GET_LOCK('lock2', -1)
1
# Set up 5 running queries
select GET_LOCK('lock1', -1);
select GET_LOCK('lock1', -1);
select GET_LOCK('lock1', -1);
select GET_LOCK('lock1', -1);
select GET_LOCK('lock1', -1);
select * from information_schema.admission_control_queue;
SCHEMA_NAME	QUEUE_ID	WAITING_QUERIES	RUNNING_QUERIES	ABORTED_QUERIES	TIMEOUT_QUERIES
test_db	0	0	5	0	0
# Set up 5 waiting queries each for queue 1 and 2
select GET_LOCK('lock2', -1);
select GET_LOCK('lock2', -1);
select GET_LOCK('lock2', -1);
select GET_LOCK('lock2', -1);
select GET_LOCK('lock2', -1);
select GET_LOCK('lock2', -1);
select GET_LOCK('lock2', -1);
select GET_LOCK('lock2', -1);
select GET_LOCK('lock2', -1);
select GET_LOCK('lock2', -1);
# Check that 10 queries are waiting
select * from information_schema.admission_control_queue;
SCHEMA_NAME	QUEUE_ID	WAITING_QUERIES	RUNNING_QUERIES	ABORTED_QUERIES	TIMEOUT_QUERIES
test_db	0	0	5	0	0
test_db	1	5	0	0	0
test_db	2	5	0	0	0
select RELEASE_LOCK('lock1');
RELEASE_LOCK('lock1')
1
# Check that 5 of the 10 queries are now scheduled with 2-3 ratio.
select * from information_schema.admission_control_queue;
SCHEMA_NAME	QUEUE_ID	WAITING_QUERIES	RUNNING_QUERIES	ABORTED_QUERIES	TIMEOUT_QUERIES
test_db	1	3	2	0	0
test_db	2	2	3	0	0
# Cleanup
select RELEASE_LOCK('lock2');
RELEASE_LOCK('lock2')
1
set global max_running_queries = @save_max_running_queries;
set global max_waiting_queries = @save_max_waiting_queries;
set global admission_control_weights = @save_admission_control_weights;
drop database test_db;
drop user test_user@localhost;
