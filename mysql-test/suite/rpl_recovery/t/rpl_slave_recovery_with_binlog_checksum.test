source include/master-slave.inc;
source include/have_gtid.inc;

call mtr.add_suppression("Error in Log_event::read_log_event()");
call mtr.add_suppression("Recovery from master pos");

connection master;
CREATE TABLE t1(a INT primary key) ENGINE = InnoDB;
sync_slave_with_master;

connection slave;
flush logs;

connection master;
INSERT INTO t1 VALUES(1);
INSERT INTO t1 VALUES(2);
INSERT INTO t1 VALUES(3);
INSERT INTO t1 VALUES(4);
INSERT INTO t1 VALUES(5);
sync_slave_with_master;

connection slave;
let $MYSQLD_DATADIR = `select @@datadir`;
let $slave_binlog_file = query_get_value("SHOW MASTER STATUS", "File", 1);
let $slave_binlog_size = query_get_value("SHOW MASTER STATUS", "Position", 1);

# Truncate the binlog
let $half = `select ROUND($slave_binlog_size / 2)`;
exec truncate -s $half $MYSQLD_DATADIR/$slave_binlog_file;

let $rpl_server_number = 2;
let $rpl_start_with_gtids = 1;
let $rpl_force_stop = 1;
source include/rpl_restart_server.inc;

connection slave;
change master to master_auto_position=1, master_heartbeat_period=0.25;
source include/start_slave.inc;

connection master;
let $use_gtids=1;
source include/sync_slave_sql_with_master.inc;

# Check if the binlogs have corrupted events
exec $MYSQL_BINLOG -v -v $MYSQLD_DATADIR/slave-bin.0* > $MYSQLTEST_VARDIR/tmp/fulldump.sql;
exec grep -c "**Corrupt" $MYSQLTEST_VARDIR/tmp/fulldump.sql || true;
remove_file $MYSQLTEST_VARDIR/tmp/fulldump.sql;

connection master;
DROP TABLE t1;
sync_slave_with_master;

let $use_gtids=0;
source include/rpl_end.inc;
