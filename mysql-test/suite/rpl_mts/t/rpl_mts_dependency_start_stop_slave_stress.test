source include/master-slave.inc;
source include/have_mts_dependency_replication.inc;
source include/big_test.inc;
source include/not_valgrind.inc;
source include/rpl_set_gtid_mode.inc;

connection slave;
STOP SLAVE SQL_THREAD;
SET @save.slave_parallel_workers= @@global.slave_parallel_workers;
SET @@GLOBAL.slave_parallel_workers= 16;

connection master;
let $skip_cleanup= 1;
let $sync_with_master= 0;
let $iter= 100;
source extra/rpl_tests/rpl_parallel_simple_load.test;

connection slave;
START SLAVE;
let $caught_up= 0;
disable_query_log;
while ($caught_up == 0)
{
  let $rand= `SELECT ROUND(RAND())`;
  if ($rand == 0)
  {
    STOP SLAVE;
  }
  if ($rand == 1)
  {
    START SLAVE;
    SELECT SLEEP(RAND() * 5);
  }
  let $caught_up= `SELECT COUNT(*) = 1 FROM INFORMATION_SCHEMA.PROCESSLIST WHERE State like "Slave has read all relay log%"`;
}
enable_query_log;

# Cleanup
connection master;
sync_slave_with_master;
source extra/rpl_tests/rpl_parallel_simple_load_consistency.test;
source extra/rpl_tests/rpl_parallel_simple_load_cleanup.test;
connection slave;
source include/stop_slave.inc;
set @@global.slave_parallel_workers= @save.slave_parallel_workers;
source include/start_slave.inc;

source include/rpl_end.inc;
