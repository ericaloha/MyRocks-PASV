source include/master-slave.inc;

# Enable trx meta data
connection master;
set @@global.binlog_trx_meta_data= true;
connection slave;
set @@global.binlog_trx_meta_data= true;

connection master;
create table t1 (a int primary key auto_increment);
create table t2 (a int primary key auto_increment);
insert into t1 values();
insert into t1 values();
insert into t2 values();
insert into t2 values();
sync_slave_with_master;

# start a fresh binlog
connection master;
flush logs;
let $binlog= query_get_value(SHOW MASTER STATUS, File, 1);
replace_result $binlog binlog;
eval purge binary logs to '$binlog';

connection slave;
flush logs;
let $binlog= query_get_value(SHOW MASTER STATUS, File, 1);
replace_result $binlog binlog;
eval purge binary logs to '$binlog';

# multi-table statement, there should only be one rows_query event for this
connection master;
delete t1, t2 from t1, t2;
sync_slave_with_master;

connection master;
let $master_binlog= query_get_value(SHOW MASTER STATUS, File, 1);
let $MYSQLD_DATADIR = `select @@datadir`;
flush logs;
echo "There should be only one rows_query event in master binlog";
exec $MYSQL_BINLOG -vvv $MYSQLD_DATADIR/$master_binlog | grep Rows_query | wc -l;

connection slave;
let $slave_binlog= query_get_value(SHOW MASTER STATUS, File, 1);
let $MYSQLD_DATADIR = `select @@datadir`;
flush logs;
echo "There should be only one rows_query event in slave binlog";
exec $MYSQL_BINLOG -vvv $MYSQLD_DATADIR/$slave_binlog | grep Rows_query | wc -l;

# Cleanup
connection master;
drop table t1;
drop table t2;
set @@global.binlog_trx_meta_data= default;
sync_slave_with_master;
connection slave;
set @@global.binlog_trx_meta_data= default;

source include/rpl_end.inc;
