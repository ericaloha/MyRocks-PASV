##
## Using the system variable high_priority_ddl"
##
connection default
create user test_user1@localhost;
grant all on test to test_user1@localhost;
create user test_user2@localhost;
grant all on test to test_user2@localhost;
##
## killing conflicting shared locks by alter table
##

## Test parameters:
## use_sys_var       = 1;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = alter table t1 modify i bigint;
## high_priority_cmd = alter high_priority table t1 modify i bigint;
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read;;
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
alter table t1 modify i bigint;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
eval alter table t1 modify i bigint;
alter table t1 modify i bigint;;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## killing conflicting shared lock in a transaction
## transaction will rollback
##

## Test parameters:
## use_sys_var       = 1;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = alter table t1 rename t1_new;
## high_priority_cmd = alter high_priority table t1 rename t1_new;
## blocking_sql      = begin; insert into t1 values (4); select i from t1;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: con1
begin; insert into t1 values (4); select i from t1;;
i
1
2
3
4
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
alter table t1 rename t1_new;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
eval alter table t1 rename t1_new;
alter table t1 rename t1_new;;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
select * from t1_new;
i
1
2
3
drop table t1_new;
##
## rename table, rename table doesn't support high_priority keyword
##

## Test parameters:
## use_sys_var       = 1
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = rename table t1 to t1_new;
## high_priority_cmd = rename high_priority table t1 to t1_new;
## blocking_sql      = begin; insert into t1 values (5); select i from t1;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: con1
begin; insert into t1 values (5); select i from t1;;
i
1
2
3
5
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
rename table t1 to t1_new;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
eval rename table t1 to t1_new;
rename table t1 to t1_new;;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
select * from t1_new;
i
1
2
3
drop table t1_new;
##
## simulate conflicting DDL which will not be killed
##

## Test parameters:
## use_sys_var       = 1;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = drop table t1;
## high_priority_cmd = drop high_priority table t1;
## blocking_sql      = lock tables t1 write;
## should_kill       = 0
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 write;;
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
drop table t1;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
drop table t1;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## killing conflicting transaction by drop table DDL
##

## Test parameters:
## use_sys_var       = 1;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = drop table t1;
## high_priority_cmd = drop high_priority table t1;
## blocking_sql      = lock tables t1 read; begin; insert into t1 values (4);
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read; begin; insert into t1 values (4);;
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
drop table t1;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
eval drop table t1;
drop table t1;;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## no effect for regular users
##

## Test parameters:
## use_sys_var       = 1;
## con_init          = default
## con_block         = con1
## con_kill          = con2
## con_status        = default
## cmd               = alter table t1 modify i bigint
## high_priority_cmd = drop high_priority table t1;
## blocking_sql      = lock tables t1 read
## should_kill       = 0
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read;
connection: con2
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and con2 exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user2	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: con2
alter table t1 modify i bigint;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: con2
alter table t1 modify i bigint;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
connection: con2 (for reset variable)
set high_priority_ddl = 0;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
#	test_user2	#	test	#	#	#	#	#	#	#	0
connection: con2
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## create index
##

## Test parameters:
## use_sys_var       = 1;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = create index idx1 on t1 (i);
## high_priority_cmd = create high_priority index idx1 on t1 (i);
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read;;
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
create index idx1 on t1 (i);;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
eval create index idx1 on t1 (i);
create index idx1 on t1 (i);;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## drop index (use the previously created table)
##

## Test parameters:
## use_sys_var       = 1;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = drop index idx1 on t1;
## high_priority_cmd = drop high_priority index idx1 on t1;
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 0
## throw_error       = 1

connection default
connection: con1
lock tables t1 read;;
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES	MUL	NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
drop index idx1 on t1;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
eval drop index idx1 on t1;
drop index idx1 on t1;;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## high_priority truncate table
##

## Test parameters:
## use_sys_var       = 1;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = truncate t1;
## high_priority_cmd = truncate high_priority t1;
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read;;
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
truncate t1;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
eval truncate t1;
truncate t1;;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## high_priority create/drop trigger
##

## Test parameters:
## use_sys_var       = 1;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = create trigger ins_sum before insert on t1 for each row set @sum = @sum + new.i;
## high_priority_cmd = create high_priority trigger ins_sum before insert on t1 for each row set @sum = @sum + new.i;
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read;;
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
create trigger ins_sum before insert on t1 for each row set @sum = @sum + new.i;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
eval create trigger ins_sum before insert on t1 for each row set @sum = @sum + new.i;
create trigger ins_sum before insert on t1 for each row set @sum = @sum + new.i;;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## drop trigger (use the previously created table)
##

## Test parameters:
## use_sys_var       = 1;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = drop trigger ins_sum;
## high_priority_cmd = drop high_priority trigger ins_sum;
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 0
## throw_error       = 1

connection default
connection: con1
lock tables t1 read;;
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
drop trigger ins_sum;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
eval drop trigger ins_sum;
drop trigger ins_sum;;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## drop database 
##
create database menagerie;
use menagerie;
create table t1(a int);
connection default
grant all on t1 to test_user1@localhost;
grant all on t1 to test_user2@localhost;

## Test parameters:
## use_sys_var       = 1;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = drop database menagerie;
## high_priority_cmd = drop high_priority database menagerie;
## blocking_sql      = begin;use menagerie; select * from t1;
## should_kill       = 1
## recreate_table    = 0
## throw_error       = 1

connection default
connection: con1
begin;use menagerie; select * from t1;;
a
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
a	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	menagerie	#	#	#	#	#	#	#	0
#	test_user1	#	menagerie	#	#	#	#	#	#	#	0
connection: default
drop database menagerie;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: menagerie.t1
set high_priority_ddl = 1;
connection: default
eval drop database menagerie;
drop database menagerie;;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	NULL	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
use test;
##
## high_priority optimize table
##
## "optimize table" doesn't throw errors. It catches all errors, and
## returns a result set in a table
##

## Test parameters:
## use_sys_var       = 1;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = optimize table t1;
## high_priority_cmd = optimize high_priority table t1;
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 0

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read;;
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
optimize table t1;;
Table	Op	Msg_type	Msg_text
test.t1	optimize	Error	Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
test.t1	optimize	status	Operation failed
set high_priority_ddl = 1;
connection: default
eval optimize table t1;
optimize table t1;;
Table	Op	Msg_type	Msg_text
test.t1	optimize	status	OK
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## high_priority lock tables
##

## Test parameters:
## use_sys_var       = 1;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = lock tables t1 write;
## high_priority_cmd = optimize high_priority table t1;
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read;;
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
lock tables t1 write;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
eval lock tables t1 write;
lock tables t1 write;;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## clean up
##
connection default
unlock tables;
drop user test_user1@localhost;
drop user test_user2@localhost;
drop table if exists t1_new;
drop table if exists t1;
##
## Using HIGH_PRIORITY syntax
##
connection default
create user test_user1@localhost;
grant all on test to test_user1@localhost;
create user test_user2@localhost;
grant all on test to test_user2@localhost;
##
## killing conflicting shared locks by alter table
##

## Test parameters:
## use_sys_var       = 0;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = alter table t1 modify i bigint;
## high_priority_cmd = alter high_priority table t1 modify i bigint;
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read;;
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
alter table t1 modify i bigint;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
alter high_priority table t1 modify i bigint;;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## killing conflicting shared lock in a transaction
## transaction will rollback
##

## Test parameters:
## use_sys_var       = 0;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = alter table t1 rename t1_new;
## high_priority_cmd = alter high_priority table t1 rename t1_new;
## blocking_sql      = begin; insert into t1 values (4); select i from t1;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: con1
begin; insert into t1 values (4); select i from t1;;
i
1
2
3
4
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
alter table t1 rename t1_new;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
alter high_priority table t1 rename t1_new;;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
select * from t1_new;
i
1
2
3
drop table t1_new;
##
## rename table, rename table doesn't support high_priority keyword
##

## Test parameters:
## use_sys_var       = 1
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = rename table t1 to t1_new;
## high_priority_cmd = rename high_priority table t1 to t1_new;
## blocking_sql      = begin; insert into t1 values (5); select i from t1;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: con1
begin; insert into t1 values (5); select i from t1;;
i
1
2
3
5
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
rename table t1 to t1_new;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
set high_priority_ddl = 1;
connection: default
eval rename table t1 to t1_new;
rename table t1 to t1_new;;
connection: default (for reset variable)
set high_priority_ddl = 0;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
select * from t1_new;
i
1
2
3
drop table t1_new;
##
## simulate conflicting DDL which will not be killed
##

## Test parameters:
## use_sys_var       = 0;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = drop table t1;
## high_priority_cmd = drop high_priority table t1;
## blocking_sql      = lock tables t1 write;
## should_kill       = 0
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 write;;
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
drop table t1;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
drop high_priority table t1;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## killing conflicting transaction by drop table DDL
##

## Test parameters:
## use_sys_var       = 0;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = drop table t1;
## high_priority_cmd = drop high_priority table t1;
## blocking_sql      = lock tables t1 read; begin; insert into t1 values (4);
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read; begin; insert into t1 values (4);;
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
drop table t1;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
drop high_priority table t1;;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## no effect for regular users
##

## Test parameters:
## use_sys_var       = 0;
## con_init          = default
## con_block         = con1
## con_kill          = con2
## con_status        = default
## cmd               = alter table t1 modify i bigint
## high_priority_cmd = drop high_priority table t1;
## blocking_sql      = lock tables t1 read
## should_kill       = 0
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read;
connection: con2
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and con2 exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user2	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: con2
alter table t1 modify i bigint;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
drop high_priority table t1;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
#	test_user2	#	test	#	#	#	#	#	#	#	0
connection: con2
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## create index
##

## Test parameters:
## use_sys_var       = 0;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = create index idx1 on t1 (i);
## high_priority_cmd = create high_priority index idx1 on t1 (i);
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read;;
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
create index idx1 on t1 (i);;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
create high_priority index idx1 on t1 (i);;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## drop index (use the previously created table)
##

## Test parameters:
## use_sys_var       = 0;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = drop index idx1 on t1;
## high_priority_cmd = drop high_priority index idx1 on t1;
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 0
## throw_error       = 1

connection default
connection: con1
lock tables t1 read;;
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES	MUL	NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
drop index idx1 on t1;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
drop high_priority index idx1 on t1;;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## high_priority truncate table
##

## Test parameters:
## use_sys_var       = 0;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = truncate t1;
## high_priority_cmd = truncate high_priority t1;
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read;;
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
truncate t1;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
truncate high_priority t1;;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## high_priority create/drop trigger
##

## Test parameters:
## use_sys_var       = 0;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = create trigger ins_sum before insert on t1 for each row set @sum = @sum + new.i;
## high_priority_cmd = create high_priority trigger ins_sum before insert on t1 for each row set @sum = @sum + new.i;
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 1

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read;;
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
create trigger ins_sum before insert on t1 for each row set @sum = @sum + new.i;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
create high_priority trigger ins_sum before insert on t1 for each row set @sum = @sum + new.i;;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## drop trigger (use the previously created table)
##

## Test parameters:
## use_sys_var       = 0;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = drop trigger ins_sum;
## high_priority_cmd = drop high_priority trigger ins_sum;
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 0
## throw_error       = 1

connection default
connection: con1
lock tables t1 read;;
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
drop trigger ins_sum;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
drop high_priority trigger ins_sum;;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## drop database 
##
create database menagerie;
use menagerie;
create table t1(a int);
connection default
grant all on t1 to test_user1@localhost;
grant all on t1 to test_user2@localhost;

## Test parameters:
## use_sys_var       = 0;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = drop database menagerie;
## high_priority_cmd = drop high_priority database menagerie;
## blocking_sql      = begin;use menagerie; select * from t1;
## should_kill       = 1
## recreate_table    = 0
## throw_error       = 1

connection default
connection: con1
begin;use menagerie; select * from t1;;
a
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
a	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	menagerie	#	#	#	#	#	#	#	0
#	test_user1	#	menagerie	#	#	#	#	#	#	#	0
connection: default
drop database menagerie;;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: menagerie.t1
drop high_priority database menagerie;;
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	NULL	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
use test;
##
## high_priority optimize table
##
## "optimize table" doesn't throw errors. It catches all errors, and
## returns a result set in a table
##

## Test parameters:
## use_sys_var       = 0;
## con_init          = default
## con_block         = con1
## con_kill          = default
## con_status        = default
## cmd               = optimize table t1;
## high_priority_cmd = optimize high_priority table t1;
## blocking_sql      = lock tables t1 read;
## should_kill       = 1
## recreate_table    = 1
## throw_error       = 0

connection default
drop table if exists t1;
create table t1 (i int);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) DEFAULT NULL
) ENGINE=ROCKSDB DEFAULT CHARSET=latin1
insert into t1 values (1), (2), (3);
connection: con1
lock tables t1 read;;
connection: default
set @m_lock_wait_timeout = @@lock_wait_timeout;
set lock_wait_timeout = 0.02;
set @m_high_priority_lock_wait_timout = @@high_priority_lock_wait_timeout;
set high_priority_lock_wait_timeout = 0.02;
describe t1;
Field	Type	Null	Key	Default	Extra
i	int(11)	YES		NULL	
connection: default (for show processlist);
# both con1 and default exist
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
#	test_user1	#	test	#	#	#	#	#	#	#	0
connection: default
optimize table t1;;
Table	Op	Msg_type	Msg_text
test.t1	optimize	Error	Lock wait timeout exceeded; try restarting transaction: Timeout on table metadata: test.t1
test.t1	optimize	status	Operation failed
optimize high_priority table t1;;
Table	Op	Msg_type	Msg_text
test.t1	optimize	status	OK
connection: default (for show processlist)
show processlist;
Id	User	Host	db	Command	Time	State	Info	Rows examined	Rows sent	Tid	Srv_Id
#	root	#	test	#	#	#	#	#	#	#	0
connection: default
set @@high_priority_lock_wait_timeout = @m_high_priority_lock_wait_timout;
set @@lock_wait_timeout = @m_lock_wait_timeout;
##
## high_priority lock tables
##
##
## clean up
##
connection default
unlock tables;
drop user test_user1@localhost;
drop user test_user2@localhost;
drop table if exists t1_new;
drop table if exists t1;
